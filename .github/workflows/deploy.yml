name: Auto Deploy to Dev / Prod

on:
  push:
    branches: [main, dev]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set environment variables
      id: env
      run: |
        if [[ "${GITHUB_REF##*/}" == "main" ]]; then
          echo "host=${{ secrets.PROD_HOST }}" >> $GITHUB_OUTPUT
          echo "dir=/srv/shared/MoonSunPower/MoonSunPower" >> $GITHUB_OUTPUT
          echo "prefix=moonsunpower" >> $GITHUB_OUTPUT
        else
          echo "host=${{ secrets.DEV_HOST }}" >> $GITHUB_OUTPUT
          echo "dir=/srv/shared/test-MoonSunPower/MoonSunPower" >> $GITHUB_OUTPUT
          echo "prefix=test_moonsunpower" >> $GITHUB_OUTPUT
        fi

    - name: SSH Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ steps.env.outputs.host }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ${{ steps.env.outputs.dir }}
          git pull origin ${GITHUB_REF##*/}

          # Backend
          cd backend
          if [ -f "venv/bin/activate" ]; then
            source venv/bin/activate
          fi
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt || true
          fi
          if [ -f "manage.py" ]; then
            python manage.py migrate || true
          fi

          sudo systemctl daemon-reload
          for svc in backend celery_worker celery_beat; do
            sudo systemctl stop "${{ steps.env.outputs.prefix }}_$svc"
            sudo systemctl start "${{ steps.env.outputs.prefix }}_$svc"
          done

          # Frontend
          cd ../frontend
          if [ -f "package.json" ]; then
            npm install
            npm run build
          fi

          sudo nginx -t && sudo systemctl restart nginx

